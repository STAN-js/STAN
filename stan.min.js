var STAN_regexp=[/function\s+([\d\w_]+)\s*\(\s*\)\s*{([\S\s]+)}/,/(\w+)(?:\[(['"]?[^\]]*?['"]?)\])?\.(e|b)\s*[\n;}]/g,/(\w+)(?:\[(['"]?[^\]]*?['"]?)\])?\.(.+)\.(\w+)\s*[\n;}]/g,/([\n;{]\s*)(\w+)(\s*[\n;}])/g,/partial\([_\w\d\.]+/g],STAN={compile:function(_template_){for(var ms,result=_template_.toString().replace(STAN_regexp[0],'function compiled_$1(context,r){\n	r=r||"";\n$2\n	return r\n}').replace(STAN_regexp[1],function(a,b,c,d){return"r+='<"+("b"==d?"":"/")+b+" '+("+(c||'""')+")+'>';"}).replace(STAN_regexp[2],function(a,b,c,d,e){return b==e?"r+='<"+b+" '+("+(c||'""')+")+'>'+("+d+")+'</"+e+">';":a}).replace(STAN_regexp[3],"$1r+='<$2/>'$3;");ms=result.match(STAN_regexp[4]);)for(var i=0;i<ms.length;i++){var tn=ms[i].replace("partial(","");result=result.replace(tn,"("+STAN.compile(eval(tn))+")")}return result},run:function(result,context,escape){function partial(a,b){var c=context;context=b,a(b,""),context=c}var r="",raw=function(a){return r+=a,a};return escape!==!1&&(context=JSON.parse(JSON.stringify(context).replace(/</g,"&lt;").replace(/&/g,"&amp;").replace(/>/g,"&gt;"))),eval("("+result.replace(/context,r/g,"")+")()"),r}};try{exports.STAN=STAN}catch(e){}